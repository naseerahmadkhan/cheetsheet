git init    #initialize an existing directory as a git repo
git clone git@github.com:naseerahmadkhan/cheetsheet.git

git config --global user.name "naseer khan"
git config --global user.email "naseer@edatasolutions.com.au"
git config user.name "Naseer Ahmad Khan"
git config user.email "naseer4uplus@gmail.com"

git config user.name
git config user.email

git status

git add [filename]  # add a file 
git add .           # add all files

git diff            # dif of what is changed but not staged
git diff --staged   # diff of what is staged but not yet committed
git diff branchB...branchA  #show the diff of what is in branchA that is not in branchB
git commit -m "msg" # commit your staged content as a new commit


git branch dev      # create a new branch at the current commit
git branch          # list your local branches
git branch -l       # list your local branches
git branch -r       # Lists all remote branches.
git branch -a       # Lists all local and remote branches.
git branch -d dev   # Safely deletes the branch if it has been merged.
git branch -D dev   # Forcefully deletes the branch, regardless of its merge 

git checkout dev    # switch to another branch
git checkout -b dev # Creates a new branch and switches to it. 


git log             # show all commits in the current branchs's history
git log branchB..branchA    # show the commits on branchA that are not on branchB

git fetch           # Used to fetch all changes from the remote repository to the local repository without merging into the current working directory
git pull            # Brings the copy of all the changes from a remote repository and merges them into the current working directory


git stash           # save modified and staged changes
git stash list      # list stack order of stashed file changes
git stash pop       # write working from top of stash stack
git stash drop      # discard the changes from top of stash stack


git reset           # To remove all files from staging area use
git reset HEAD
git reset e5ec16659faed23166f54b2c35464996792999c5  #Moves head to specified commit
git reflog          # to see a log of changes to HEAD

git reset file.txt  # To remove specific file use 
git restore file.txt #  is used to restore file contents to a specific state.

git reset --hard    # revert changes
git clean -fd



git rm --cached -r dirname # if wrongly committed and unintentionally added a directory that should have been ignored



git remote show origin
git remote -v           #This will print all your remotes' fetch/push URLs:
git remote rm origin
git remote add origin https://github.com/newuser/newrepo.git
git remote set-url origin git@github.com:USERNAME/REPO.git
git push -u origin master



git merge dev       # Merges the specified branch into the current branch.